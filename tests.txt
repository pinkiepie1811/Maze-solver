/***********************************************************************
 * Maze Solving
 ***********************************************************************/
Program: This program read a maze in a file and return the shortest path
from the start to the end position (if possible)

* Test plan*
1. A blank maze
2. A small maze with more than one solutions
3. A small maze with one solution
4. A medium maze with no solution
5. A medium maze with more than one solution
6. A big maze with one solution

* Test cases*
1. ./solve < /dev/null
Expected output:
"Unable to read height and width from first line"
In readMaze, isValidMazeHeader is called, and as the input is does not
provide the valid tokens, the line is printed to the terminal

2. ./solve < short_0.txt
Expected output:
0,1
1,1
2,1
3,1
4,1
(The shortest path)

3. ./solve < short_1.txt
Expected output:
0,2
1,2
2,2
2,1
3,1
4,1


4. ./solve < medium_0.txt
Expected ouput:
No ouput as there is no solution

5. ./solve < medium_1.txt
Expected output:
0,21
1,21
2,21
3,21
3,20
3,19
4,19
5,19
5,18
5,17
4,17
3,17
3,16
3,15
4,15
5,15
5,14
5,13
5,12
5,11
5,10
5,9
6,9
7,9
7,10
7,11
7,12
7,13
8,13
9,13
10,13
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
12,21
(The shortest solution)

6. ./solve < big.txt
Expected output:
0,5
1,5
2,5
3,5
4,5
5,5
5,6
6,6
7,6
8,6
9,6
10,6
10,7
11,7
11,8
12,8
13,8
14,8
15,8
16,8
17,8
18,8
19,8


* Transcript*
Script started on 2021-12-05 21:57:09-06:00 [TERM="xterm-256color" TTY="/dev/pts/7" COLUMNS="80" LINES="24"]
@postel:homework5$ export PS1="$ " 
$ make
clang  -g -Wall -Werror -std=c11 -c solve.c
clang  -g -Wall -Werror -std=c11 -c queue.c
clang  -g -Wall -Werror -std=c11 -c path.c
clang  -g -Wall -Werror -std=c11 -c maze.c
clang  -o solve solve.o queue.o path.o maze.o
$ cagt [K[K[Kt [K[K[K[Kmake[C[Cexport PS1="$ " [C[C[Cmacs tests.txt &[C[Ccd csc161/homework/homework5[C[C[17Pmake path.o[K[K[K[K[K./solve </dev/null
Unable to read height and width from first line$ 
$ cat srhot_[K[K[K[K[Khort_0.txt
5 5
#S###
#   #
#   #
#   #
#E###
$ ./solve <short_o.txt[K[K[K[K[K0.txt
0,1
1,1
2,1
3,1
4,1
$ cat short_1.txt
5 5
##S##
## ##
#  ##
# ###
#E###
$ ./solve <short_1.txt
0,2
1,2
2,2
2,1
3,1
4,1
$ cat medium_0.txt
15 41
*********************S*******************
*   *       *         *                 *
*** * *** *** ******* * ******* * ***** *
*   *   *     *   *   *   *   * * *   * *
* * *** ******* * * ***** *** * * * * ***
* *   * *       *   *   *   * * * * *   *
* * *** * *********** * *** * * * * *** *
* * *   *     *     * *   *   * * *   * *
* * * ******* * *** * * ***** * * *** ***
* * * *     * * * *   *     * * * *   * *
* *** *** * * * * ******* *** * *** *** *
*         * *           *     *         *
*****************************************
*****************************************
******************E**********************
$ so[K[K./solve <medium_o.txt[K[K[K[K[K0.txt
$ cat medium_1.txt
13 41
*********************S*******************
*   *       *         *                 *
*** * *** *** ******* * ******* * ***** *
*   *   *     *   *   *   *   * * *   * *
* * *** ******* * * ***** *** * * * * ***
* *   * *       *   *   *   * * * * *   *
* * *** * *********** * *** * * * * *** *
* * *   *     *     * *   *   * * *   * *
* * * ******* * *** * * ***** * * *** ***
* * * *     * * * *   *     * * * *   * *
* *** *** * * * * ******* *** * *** *** *
*         * *           *     *         *
*********************E*******************
$ ./solve<dei[K[K[Kmediuem[K[Km_1.txt
0,21
1,21
2,21
3,21
3,20
3,19
4,19
5,19
5,18
5,17
4,17
3,17
3,16
3,15
4,15
5,15
5,14
5,13
5,12
5,11
5,10
5,9
6,9
7,9
7,10
7,11
7,12
7,13
8,13
9,13
10,13
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
12,21
$ ./solve<medium_1.txt[C[C[4Pcat medium_1.txt[K[K[K[K[K[K[K[K[K[K[K[Kbig.txt
20 20
#####S##############
##### ##############
##### ##############
##### ##############
##### ##############
#####  #############
###### #############
###### #############
###### #############
###### #############
######  ############
#######  ###########
######## ###########
######## ###########
######## ###########
######## ###########
######## ###########
######## ###########
######## ###########
########E###########

$ ./solve <big.gt[K[Ktxt
0,5
1,5
2,5
3,5
4,5
5,5
5,6
6,6
7,6
8,6
9,6
10,6
10,7
11,7
11,8
12,8
13,8
14,8
15,8
16,8
17,8
18,8
19,8
$ exit
exit

Script done on 2021-12-05 21:59:52-06:00 [COMMAND_EXIT_CODE="0"]


* Summary: The program works as expected. When there is no solution,
  nothing is printed, and when there are multiple solutions, the shortest
  path is printed. 
